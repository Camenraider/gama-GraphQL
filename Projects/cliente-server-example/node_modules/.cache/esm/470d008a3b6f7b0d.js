let createServer,readFile,resolve;_3b6‍.w("http",[["createServer",["createServer"],function(v){createServer=v}]]);_3b6‍.w("fs",[["readFile",["readFile"],function(v){readFile=v}]]);_3b6‍.w("path",[["resolve",["resolve"],function(v){resolve=v}]]);



const server = createServer((request, response) => {
    switch (request.url) {
        case '/status': {
            response.writeHead(200, {
                'Content-Type' : 'application/json',
            });
            response.write(
                JSON.stringify({
                    'status': 'Okay',
                })
            );
            response.end();
            break;
        }

        case '/sign-in': {
            const path = resolve(__dirname, './pages/sign-in.html');
            readFile(path, (error, file) => {
                if (erro){
                    response.writeHead(500, 'Can\'t process HTML file.');
                    response.end();
                return;
            }
            response.writeHead(200);
            response.write(file);
            response.end();
            });
            break;
        }
        case '/authenticate': {

        }
        default: {
            response.writeHead(404,'Service not found.');
            response.end();
        }
    }
});

const PORT = process.env.PORT ? parseInt(process.env.PORT) : 8000;
const HOSTNAME = process.env.HOSTNAME || '127.0.0.1';

server.listen(PORT, HOSTNAME, () =>{
    console.log(`Server is listening at http://${HOSTNAME}:${PORT}.`);
});